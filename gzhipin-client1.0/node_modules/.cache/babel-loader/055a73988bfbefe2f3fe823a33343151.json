{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nexport function getComponentLocale(props, context, componentName, getDefaultLocale) {\n  var locale = {};\n\n  if (context && context.antLocale && context.antLocale[componentName]) {\n    locale = context.antLocale[componentName];\n  } else {\n    var defaultLocale = getDefaultLocale(); // TODO: make default lang of antd be English\n    // https://github.com/ant-design/ant-design/issues/6334\n\n    locale = defaultLocale['default'] || defaultLocale;\n  }\n\n  var result = _extends({}, locale);\n\n  if (props.locale) {\n    result = _extends({}, result, props.locale);\n\n    if (props.locale.lang) {\n      result.lang = _extends({}, locale.lang, props.locale.lang);\n    }\n  }\n\n  return result;\n}\nexport function getLocaleCode(context) {\n  var localeCode = context.antLocale && context.antLocale.locale; // Had use LocaleProvide but didn't set locale\n\n  if (context.antLocale && context.antLocale.exist && !localeCode) {\n    return 'zh-cn';\n  }\n\n  return localeCode;\n}","map":{"version":3,"sources":["E:/workspaces/github/Boss_React/gzhipin-client1.0/node_modules/antd-mobile/es/_util/getLocale.js"],"names":["_extends","getComponentLocale","props","context","componentName","getDefaultLocale","locale","antLocale","defaultLocale","result","lang","getLocaleCode","localeCode","exist"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,+BAArB;AACA,OAAO,SAASC,kBAAT,CAA4BC,KAA5B,EAAmCC,OAAnC,EAA4CC,aAA5C,EAA2DC,gBAA3D,EAA6E;AAChF,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAIH,OAAO,IAAIA,OAAO,CAACI,SAAnB,IAAgCJ,OAAO,CAACI,SAAR,CAAkBH,aAAlB,CAApC,EAAsE;AAClEE,IAAAA,MAAM,GAAGH,OAAO,CAACI,SAAR,CAAkBH,aAAlB,CAAT;AACH,GAFD,MAEO;AACH,QAAII,aAAa,GAAGH,gBAAgB,EAApC,CADG,CAEH;AACA;;AACAC,IAAAA,MAAM,GAAGE,aAAa,CAAC,SAAD,CAAb,IAA4BA,aAArC;AACH;;AACD,MAAIC,MAAM,GAAGT,QAAQ,CAAC,EAAD,EAAKM,MAAL,CAArB;;AACA,MAAIJ,KAAK,CAACI,MAAV,EAAkB;AACdG,IAAAA,MAAM,GAAGT,QAAQ,CAAC,EAAD,EAAKS,MAAL,EAAaP,KAAK,CAACI,MAAnB,CAAjB;;AACA,QAAIJ,KAAK,CAACI,MAAN,CAAaI,IAAjB,EAAuB;AACnBD,MAAAA,MAAM,CAACC,IAAP,GAAcV,QAAQ,CAAC,EAAD,EAAKM,MAAM,CAACI,IAAZ,EAAkBR,KAAK,CAACI,MAAN,CAAaI,IAA/B,CAAtB;AACH;AACJ;;AACD,SAAOD,MAAP;AACH;AACD,OAAO,SAASE,aAAT,CAAuBR,OAAvB,EAAgC;AACnC,MAAIS,UAAU,GAAGT,OAAO,CAACI,SAAR,IAAqBJ,OAAO,CAACI,SAAR,CAAkBD,MAAxD,CADmC,CAEnC;;AACA,MAAIH,OAAO,CAACI,SAAR,IAAqBJ,OAAO,CAACI,SAAR,CAAkBM,KAAvC,IAAgD,CAACD,UAArD,EAAiE;AAC7D,WAAO,OAAP;AACH;;AACD,SAAOA,UAAP;AACH","sourcesContent":["import _extends from 'babel-runtime/helpers/extends';\r\nexport function getComponentLocale(props, context, componentName, getDefaultLocale) {\r\n    var locale = {};\r\n    if (context && context.antLocale && context.antLocale[componentName]) {\r\n        locale = context.antLocale[componentName];\r\n    } else {\r\n        var defaultLocale = getDefaultLocale();\r\n        // TODO: make default lang of antd be English\r\n        // https://github.com/ant-design/ant-design/issues/6334\r\n        locale = defaultLocale['default'] || defaultLocale;\r\n    }\r\n    var result = _extends({}, locale);\r\n    if (props.locale) {\r\n        result = _extends({}, result, props.locale);\r\n        if (props.locale.lang) {\r\n            result.lang = _extends({}, locale.lang, props.locale.lang);\r\n        }\r\n    }\r\n    return result;\r\n}\r\nexport function getLocaleCode(context) {\r\n    var localeCode = context.antLocale && context.antLocale.locale;\r\n    // Had use LocaleProvide but didn't set locale\r\n    if (context.antLocale && context.antLocale.exist && !localeCode) {\r\n        return 'zh-cn';\r\n    }\r\n    return localeCode;\r\n}"]},"metadata":{},"sourceType":"module"}