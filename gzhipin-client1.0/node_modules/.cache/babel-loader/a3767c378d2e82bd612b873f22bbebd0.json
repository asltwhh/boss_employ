{"ast":null,"code":"import \"antd-mobile/es/badge/style\";\nimport _Badge from \"antd-mobile/es/badge\";\nimport \"antd-mobile/es/list/style\";\nimport _List from \"antd-mobile/es/list\";\nvar _jsxFileName = \"E:\\\\mycode\\\\boss_employ\\\\gzhipin-client1.0\\\\src\\\\containers\\\\message\\\\message.jsx\";\n\n/* 消息列表界面的路由组件 */\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nconst Item = _List.Item;\nconst Brief = Item.Brief;\n\nfunction getLastMsgs(chatMsgs) {\n  // 1 找到每个聊天的lastMsg,并用一个容器对象来保存{chat_id,lastMsg}\n  const lastMsgObjs = {};\n  chatMsgs.forEach(msg => {\n    // 得到msg的聊天id\n    const chatId = msg.chat_id; // 获取已保存的当前组件的lastMsg\n\n    const lastMsg = lastMsgObjs[chatId];\n  });\n}\n\nclass Message extends React.Component {\n  render() {\n    const {\n      user\n    } = this.props;\n    const {\n      users,\n      chatMsgs\n    } = this.props.chat; // 对chatMsgs使用chat_id进行分组\n\n    const lastMsgs = getLastMsgs(chatMsgs);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(_List, {\n      style: {\n        marginTop: 50,\n        marginBottom: 50\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Item, {\n      extra: /*#__PURE__*/React.createElement(_Badge, {\n        text: 3,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }\n      }) // 未读消息数量\n      ,\n      thumb: require(`../../assets/images/头像1.png`) // 头像\n      ,\n      arrow: \"horizontal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, \"\\u4F60\\u597D\", /*#__PURE__*/React.createElement(Brief, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"nr1\"))));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user,\n  chat: state.chat\n}), {})(Message);","map":{"version":3,"sources":["E:/mycode/boss_employ/gzhipin-client1.0/src/containers/message/message.jsx"],"names":["React","connect","Item","Brief","getLastMsgs","chatMsgs","lastMsgObjs","forEach","msg","chatId","chat_id","lastMsg","Message","Component","render","user","props","users","chat","lastMsgs","marginTop","marginBottom","require","state"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAGA,MAAMC,IAAI,GAAG,MAAKA,IAAlB;AACA,MAAMC,KAAK,GAAGD,IAAI,CAACC,KAAnB;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC7B;AACA,QAAMC,WAAW,GAAG,EAApB;AACAD,EAAAA,QAAQ,CAACE,OAAT,CAAkBC,GAAD,IAAS;AACxB;AACA,UAAMC,MAAM,GAAGD,GAAG,CAACE,OAAnB,CAFwB,CAGxB;;AACA,UAAMC,OAAO,GAAGL,WAAW,CAACG,MAAD,CAA3B;AACD,GALD;AAMD;;AAED,MAAMG,OAAN,SAAsBZ,KAAK,CAACa,SAA5B,CAAsC;AACpCC,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKC,KAAtB;AACA,UAAM;AAAEC,MAAAA,KAAF;AAASZ,MAAAA;AAAT,QAAsB,KAAKW,KAAL,CAAWE,IAAvC,CAFO,CAGP;;AACA,UAAMC,QAAQ,GAAGf,WAAW,CAACC,QAAD,CAA5B;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE;AAAM,MAAA,KAAK,EAAE;AAAEe,QAAAA,SAAS,EAAE,EAAb;AAAiBC,QAAAA,YAAY,EAAE;AAA/B,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,IAAD;AACE,MAAA,KAAK,eAAE;AAAO,QAAA,IAAI,EAAE,CAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADT,CAC6B;AAD7B;AAEE,MAAA,KAAK,EAAEC,OAAO,CAAE,6BAAF,CAFhB,CAEiD;AAFjD;AAGE,MAAA,KAAK,EAAC,YAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAME,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aANF,CADF,CAFF,CADF;AAeD;;AArBmC;;AAuBtC,eAAerB,OAAO,CACnBsB,KAAD,KAAY;AAAER,EAAAA,IAAI,EAAEQ,KAAK,CAACR,IAAd;AAAoBG,EAAAA,IAAI,EAAEK,KAAK,CAACL;AAAhC,CAAZ,CADoB,EAEpB,EAFoB,CAAP,CAGbN,OAHa,CAAf","sourcesContent":["/* 消息列表界面的路由组件 */\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { List, Badge } from \"antd-mobile\";\r\n\r\nconst Item = List.Item;\r\nconst Brief = Item.Brief;\r\n\r\nfunction getLastMsgs(chatMsgs) {\r\n  // 1 找到每个聊天的lastMsg,并用一个容器对象来保存{chat_id,lastMsg}\r\n  const lastMsgObjs = {};\r\n  chatMsgs.forEach((msg) => {\r\n    // 得到msg的聊天id\r\n    const chatId = msg.chat_id;\r\n    // 获取已保存的当前组件的lastMsg\r\n    const lastMsg = lastMsgObjs[chatId];\r\n  });\r\n}\r\n\r\nclass Message extends React.Component {\r\n  render() {\r\n    const { user } = this.props;\r\n    const { users, chatMsgs } = this.props.chat;\r\n    // 对chatMsgs使用chat_id进行分组\r\n    const lastMsgs = getLastMsgs(chatMsgs);\r\n    return (\r\n      <div>\r\n        {/* 设置上下外边距 */}\r\n        <List style={{ marginTop: 50, marginBottom: 50 }}>\r\n          <Item\r\n            extra={<Badge text={3} />} // 未读消息数量\r\n            thumb={require(`../../assets/images/头像1.png`)} // 头像\r\n            arrow=\"horizontal\"\r\n          >\r\n            你好\r\n            <Brief>nr1</Brief>\r\n          </Item>\r\n        </List>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default connect(\r\n  (state) => ({ user: state.user, chat: state.chat }),\r\n  {}\r\n)(Message);\r\n"]},"metadata":{},"sourceType":"module"}