{"ast":null,"code":"/* \r\n包含n个reducer函数：根据老的state和指定的action返回一个新的state\r\n*/\nimport { combineReducers } from 'redux';\nimport { AUTH_SUCCESS, ERROR_MSG } from './action-types'; // 产生user状态的reducer\n\nconst initUser = {\n  username: '',\n  // 用户名\n  type: '',\n  //用户类型\n  msg: '' // 存放错误提示信息\n\n};\n\nfunction user(state = initUser, action) {\n  switch (action.type) {\n    case AUTH_SUCCESS:\n      //data存放user\n      return { ...state,\n        ...action.data\n      };\n\n    case ERROR_MSG:\n      // data存放msg\n      return { ...state,\n        msg: action.data\n      };\n\n    default:\n      return state;\n  }\n} // 合并所有的reducer函数，向外暴露\n\n\nexport default combineReducers({\n  user\n}); // 向外暴露的结构：{user:{}}","map":{"version":3,"sources":["E:/mycode/boss_employ/gzhipin-client/src/redux/reducers.jsx"],"names":["combineReducers","AUTH_SUCCESS","ERROR_MSG","initUser","username","type","msg","user","state","action","data"],"mappings":"AAAA;;;AAGA,SAAQA,eAAR,QAA8B,OAA9B;AAEA,SAAQC,YAAR,EAAqBC,SAArB,QAAqC,gBAArC,C,CAEA;;AACA,MAAMC,QAAQ,GAAG;AACbC,EAAAA,QAAQ,EAAE,EADG;AACG;AAChBC,EAAAA,IAAI,EAAE,EAFO;AAED;AACZC,EAAAA,GAAG,EAAE,EAHQ,CAGF;;AAHE,CAAjB;;AAKA,SAASC,IAAT,CAAcC,KAAK,GAACL,QAApB,EAA8BM,MAA9B,EAAqC;AACjC,UAAQA,MAAM,CAACJ,IAAf;AACI,SAAKJ,YAAL;AAAqB;AACjB,aAAO,EAAC,GAAGO,KAAJ;AAAW,WAAGC,MAAM,CAACC;AAArB,OAAP;;AACJ,SAAKR,SAAL;AAAkB;AACd,aAAO,EAAC,GAAGM,KAAJ;AAAWF,QAAAA,GAAG,EAACG,MAAM,CAACC;AAAtB,OAAP;;AACJ;AACI,aAAOF,KAAP;AANR;AAQH,C,CAGD;;;AACA,eAAeR,eAAe,CAAC;AAC3BO,EAAAA;AAD2B,CAAD,CAA9B,C,CAIA","sourcesContent":["/* \r\n包含n个reducer函数：根据老的state和指定的action返回一个新的state\r\n*/\r\nimport {combineReducers} from 'redux'\r\n\r\nimport {AUTH_SUCCESS,ERROR_MSG} from './action-types'\r\n\r\n// 产生user状态的reducer\r\nconst initUser = {\r\n    username: '',   // 用户名\r\n    type: '',   //用户类型\r\n    msg: '',   // 存放错误提示信息\r\n}\r\nfunction user(state=initUser, action){\r\n    switch (action.type){\r\n        case AUTH_SUCCESS:   //data存放user\r\n            return {...state, ...action.data};\r\n        case ERROR_MSG:   // data存放msg\r\n            return {...state, msg:action.data};\r\n        default:\r\n            return state;\r\n    } \r\n}\r\n\r\n\r\n// 合并所有的reducer函数，向外暴露\r\nexport default combineReducers({\r\n    user\r\n})\r\n\r\n// 向外暴露的结构：{user:{}}"]},"metadata":{},"sourceType":"module"}