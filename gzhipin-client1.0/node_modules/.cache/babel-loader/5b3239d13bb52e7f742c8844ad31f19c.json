{"ast":null,"code":"import \"antd-mobile/es/wing-blank/style/css\";\nimport _WingBlank from \"antd-mobile/es/wing-blank\";\nimport \"antd-mobile/es/button/style/css\";\nimport _Button from \"antd-mobile/es/button\";\nimport \"antd-mobile/es/radio/style/css\";\nimport _Radio from \"antd-mobile/es/radio\";\nimport \"antd-mobile/es/input-item/style/css\";\nimport _InputItem from \"antd-mobile/es/input-item\";\nimport \"antd-mobile/es/white-space/style/css\";\nimport _WhiteSpace from \"antd-mobile/es/white-space\";\nimport \"antd-mobile/es/nav-bar/style/css\";\nimport _NavBar from \"antd-mobile/es/nav-bar\";\nimport \"antd-mobile/es/list/style/css\";\nimport _List from \"antd-mobile/es/list\";\nvar _jsxFileName = \"E:\\\\mycode\\\\boss_employ\\\\gzhipin-client\\\\src\\\\containers\\\\register\\\\register.jsx\";\n\n/* \r\n    注册路由组件\r\n*/\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport Logo from '../../components/logo/logo';\nimport { register } from '../../redux/actions';\nconst ListItem = _List.Item;\n\nclass Register extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      //用户名\n      password: '',\n      // 密码\n      password2: '',\n      // 确认密码\n      type: 'laoban' // 用户类型\n\n    };\n\n    this.register = () => {\n      // console.log(this.state);\n      // 不需要传入password2,\n      this.props.register(this.state);\n    };\n\n    this.handleChange = (name, value) => {\n      // 更新状态,要用[name]，这样才会作为变量，否则就会直接去查找state中的name属性，而state中没有name属性\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.toLogin = () => {\n      // 已有账户，则进入登录界面\n      this.props.history.replace('/login');\n    };\n  }\n\n  render() {\n    const {\n      type\n    } = this.state;\n    const {\n      msg,\n      redirectTo\n    } = this.props.user; // 如果它有值，则需要它重定向到指定的路由\n\n    if (redirectTo) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: redirectTo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(_NavBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"\\u7845\\xA0\\u8C37\\xA0\\u76F4\\xA0\\u8058\"), /*#__PURE__*/React.createElement(Logo, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(_WingBlank, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(_List, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, msg ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"error-msg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 31\n      }\n    }, msg) : null, /*#__PURE__*/React.createElement(_WhiteSpace, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(_InputItem, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u7528\\u6237\\u540D\",\n      onChange: value => {\n        this.handleChange('username', value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }\n    }, \"\\u7528\\u6237\\u540D\\uFF1A\"), /*#__PURE__*/React.createElement(_WhiteSpace, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(_InputItem, {\n      placeholder: \"\\u8BF7\\u8F93\\u5165\\u5BC6\\u7801\",\n      type: \"password\",\n      onChange: value => {\n        this.handleChange('password', value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }\n    }, \"\\u5BC6\\xA0\\xA0\\xA0\\u7801\\uFF1A\"), /*#__PURE__*/React.createElement(_WhiteSpace, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(_InputItem, {\n      placeholder: \"\\u8BF7\\u518D\\u6B21\\u8F93\\u5165\\u5BC6\\u7801\\u8FDB\\u884C\\u786E\\u8BA4\",\n      type: \"password\",\n      onChange: value => {\n        this.handleChange('password2', value);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 25\n      }\n    }, \"\\u786E\\u8BA4\\u5BC6\\u7801\\uFF1A\"), /*#__PURE__*/React.createElement(ListItem, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 29\n      }\n    }, \"\\u7528\\u6237\\u7C7B\\u578B\\uFF1A\"), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(_Radio, {\n      checkd: type === 'dashen',\n      onChange: () => this.handleChange('type', 'dashen'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 29\n      }\n    }, \"\\u5927\\u795E\"), \"\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/React.createElement(_Radio, {\n      checkd: type === 'laoban',\n      onChange: () => this.handleChange('type', 'laoban'),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 29\n      }\n    }, \"\\u8001\\u677F\")), /*#__PURE__*/React.createElement(_Button, {\n      type: \"primary\",\n      onClick: this.register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 25\n      }\n    }, \"\\u6CE8\\xA0\\xA0\\xA0\\u518C\"), /*#__PURE__*/React.createElement(_Button, {\n      onClick: this.toLogin,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 25\n      }\n    }, \"\\u5DF2\\u6709\\u8D26\\u6237\"))));\n  }\n\n}\n\nexport default connect(state => ({\n  user: state.user\n}), {\n  register\n})(Register);","map":{"version":3,"sources":["E:/mycode/boss_employ/gzhipin-client/src/containers/register/register.jsx"],"names":["React","connect","Redirect","Logo","register","ListItem","Item","Register","Component","state","username","password","password2","type","props","handleChange","name","value","setState","toLogin","history","replace","render","msg","redirectTo","user"],"mappings":"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","sourcesContent":["/* \r\n    注册路由组件\r\n*/\r\n\r\nimport React from 'react'\r\nimport {NavBar, WingBlank, List, InputItem, WhiteSpace, Radio, Button} from 'antd-mobile'\r\nimport {connect} from 'react-redux'\r\nimport {Redirect} from 'react-router-dom'\r\n\r\nimport Logo from '../../components/logo/logo'\r\nimport {register} from '../../redux/actions'\r\n\r\nconst ListItem = List.Item;\r\nclass Register extends React.Component{\r\n    state = {\r\n        username: '',    //用户名\r\n        password: '',    // 密码\r\n        password2: '',   // 确认密码\r\n        type: 'laoban'         // 用户类型\r\n    }\r\n\r\n    // 点击注册调用\r\n    register = () => {\r\n        // console.log(this.state);\r\n        // 不需要传入password2,\r\n        this.props.register(this.state);\r\n    }\r\n\r\n    handleChange = (name, value) => {\r\n        // 更新状态,要用[name]，这样才会作为变量，否则就会直接去查找state中的name属性，而state中没有name属性\r\n        this.setState({[name]:value})\r\n    }\r\n\r\n    toLogin =() =>{\r\n        // 已有账户，则进入登录界面\r\n        this.props.history.replace('/login');\r\n    }\r\n\r\n    render(){\r\n        const {type} = this.state;\r\n        const {msg,redirectTo} = this.props.user;\r\n\r\n        // 如果它有值，则需要它重定向到指定的路由\r\n        if(redirectTo){\r\n            return <Redirect to={redirectTo} />\r\n        }\r\n        return (\r\n            <div>\r\n                <NavBar>硅&nbsp;谷&nbsp;直&nbsp;聘</NavBar>\r\n                <Logo></Logo>\r\n                {/* WingBlank表示两边留白  WhiteSpace表示上下留白 */}\r\n                <WingBlank>  \r\n                    <List>\r\n                        {msg? <div className='error-msg'>{msg}</div>: null}\r\n                        <WhiteSpace />  \r\n                        <InputItem placeholder='请输入用户名' onChange={value => {this.handleChange('username',value)}}>用户名：</InputItem>\r\n                        <WhiteSpace />  \r\n                        <InputItem placeholder='请输入密码' type='password' onChange={value => {this.handleChange('password',value)}}>密&nbsp;&nbsp;&nbsp;码：</InputItem>\r\n                        <WhiteSpace />\r\n                        <InputItem placeholder='请再次输入密码进行确认' type='password' onChange={value => {this.handleChange('password2',value)}}>确认密码：</InputItem>\r\n                        <ListItem>\r\n                            <span>用户类型：</span>&nbsp;&nbsp;&nbsp;\r\n                            <Radio checkd={type==='dashen'} onChange={()=>this.handleChange('type','dashen')}>大神</Radio>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                            <Radio checkd={type==='laoban'} onChange={()=>this.handleChange('type','laoban')}>老板</Radio>\r\n                        </ListItem>\r\n                        <Button type='primary' onClick={this.register}>注&nbsp;&nbsp;&nbsp;册</Button>\r\n                        <Button onClick={this.toLogin}>已有账户</Button>\r\n                    </List>\r\n                </WingBlank>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    state => ({user:state.user}),\r\n    {register}\r\n)(Register)"]},"metadata":{},"sourceType":"module"}